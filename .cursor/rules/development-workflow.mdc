---
description: Development Workflow
globs: 
alwaysApply: false
---
## Development Workflow

### 1. Git Setup and Branch Management
Before starting work:
1. Ask me if I want to create a new branch for our work
2. If yes:
   - Check main branch status and sync with remote if necessary
   - Create a feature branch from main using a descriptive name
   - Confirm branch creation and status
   - Switch to the feature branch
3. Do NOT commit any code.  Prompt me when you think its time to commit; along with a proposed commit message.

### 2. Understanding the requirements
Before starting work:
1. Explain the problem statement and requirements
2. Explain the tests that we need to write
3. Explain the code that we need to write

### 3. Test-Driven Development Cycle
For each feature/change:
1. **Test First (Red)**
   - Check for any test file changes before starting
   - If there are no changes, propose test cases before implementation
      - When possible, start with tests that exercise the user facing API/interface
      - Then move to lower level tests
   - Write specific, focused test cases
   - Run pnpm test:unit to ensure the new tests fail appropriately
   - If these pass ask me to manually run the integration tests if needed

2. **Minimal Implementation (Green)**
   - Write just enough code to pass tests
   - Include type signatures for all functions
   - Run pnpm test to verify all tests pass

3. **Refactor**
   - Identify refactoring opportunities
   - Extract functions for reusability
   - Improve naming and documentation
   - Run pnpm test:unit after each refactor to verify that tests pass
   - If these pass ask me to manually run the integration tests if needed